import 'package:flutter/material.dart';
import 'package:gestion_des_membres/screens/personne_physique_non_exploitant/personnePhysiqueAddPage5.dart';
import 'package:nb_utils/nb_utils.dart';

import '../../config/constants.dart';
import '../../models/Member.dart';
import '../../utils/design.util.dart';

class PersonnePhysiqueAddPage4 extends StatefulWidget {
  final Member member;

  const PersonnePhysiqueAddPage4({Key? key, required this.member})
      : super(key: key);

  @override
  State<PersonnePhysiqueAddPage4> createState() =>
      _PersonnePhysiqueAddPage4State();
}

class _PersonnePhysiqueAddPage4State extends State<PersonnePhysiqueAddPage4> {
  final GlobalKey<FormState> _formKey = GlobalKey<FormState>();
  List _needs = ['Besoin 1', 'Besoin 2', 'Besoin 3'];

  @override
  void initState() {
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        leading: Builder(
          builder: (BuildContext context) {
            return IconButton(
              icon: Icon(Icons.arrow_back_ios),
              onPressed: () {
                Navigator.pop(context);
              },
              tooltip: MaterialLocalizations.of(context).openAppDrawerTooltip,
            );
          },
        ),
        elevation: 0,
        titleSpacing: 40,
        centerTitle: true,
        backgroundColor: primaryColor,
        title: Text("Etape 4/5"),
      ),
      body: SingleChildScrollView(
          child: Form(
        key: _formKey,
        child: Column(children: [
          Container(
            child: Padding(
              padding: const EdgeInsets.all(15.0),
              child: Text(
                "Veuillez renseigner les besoins du membre :",
                textAlign: TextAlign.center,
              ),
            ),
          ),
          Padding(
            padding: const EdgeInsets.all(12.0),
            child: Container(
                padding: EdgeInsets.only(top: 10, bottom: 5),
                child: DropdownButtonFormField(
                  style: TextStyle(
                      color: Colors.black, fontWeight: FontWeight.bold),
                  items: _needs.map((item) {
                    return new DropdownMenuItem(
                      value: item,
                      child: new Text(item),
                    );
                  }).toList(),
                  onChanged: (value) {
                    setState(() {
                      widget.member.needHelp1 = value.toString();
                    });
                  },
                  decoration:
                      themeInputDecoration.copyWith(labelText: 'Besoin 1'),
                ),
                decoration:
                    BoxDecoration(borderRadius: BorderRadius.circular(10))),
          ),
          10.height,
          Padding(
            padding: const EdgeInsets.all(12.0),
            child: Container(
                padding: EdgeInsets.only(top: 10, bottom: 2),
                child: DropdownButtonFormField(
                  style: TextStyle(
                      color: Colors.black, fontWeight: FontWeight.bold),
                  items: _needs.map((item) {
                    return new DropdownMenuItem(
                      value: item,
                      child: new Text(item),
                    );
                  }).toList(),
                  onChanged: (value) {
                    setState(() {
                      widget.member.needHelp2 = value.toString();
                    });
                  },
                  decoration:
                      themeInputDecoration.copyWith(labelText: 'Besoin 2'),
                ),
                decoration:
                    BoxDecoration(borderRadius: BorderRadius.circular(10))),
          ),
          10.height,
          Padding(
            padding: const EdgeInsets.all(12.0),
            child: Container(
                padding: EdgeInsets.only(top: 10, bottom: 2),
                child: DropdownButtonFormField(
                  style: TextStyle(
                      color: Colors.black, fontWeight: FontWeight.bold),
                  items: _needs.map((item) {
                    return new DropdownMenuItem(
                      value: item,
                      child: new Text(item),
                    );
                  }).toList(),
                  onChanged: (value) {
                    setState(() {
                      widget.member.needHelp1 = value.toString();
                    });
                  },
                  decoration:
                      themeInputDecoration.copyWith(labelText: 'Besoin 3'),
                ),
                decoration:
                    BoxDecoration(borderRadius: BorderRadius.circular(10))),
          ),
          40.height,
          Container(
              margin: EdgeInsets.only(left: 48, right: 48, top: 18),
              child: SizedBox(
                width: double.infinity,
                height: 50.0,
                child: ElevatedButton(
                  style: ButtonStyle(
                      backgroundColor:
                          MaterialStateProperty.all<Color>(primaryColor),
                      shape: MaterialStateProperty.all<RoundedRectangleBorder>(
                          RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(10),
                      ))),
                  onPressed: () {
                    if (_formKey.currentState!.validate()) {
                      Navigator.push(
                          context,
                          MaterialPageRoute(
                              builder: (context) => PersonnePhysiqueAddPage5(
                                  member: widget.member)));
                    }
                  },
                  child: Icon(
                    Icons.arrow_circle_right_outlined,
                    color: Colors.white,
                  ),
                ),
              )),
        ]),
      )),
    );
  }
}
